version: '3.8'

services:
  app:
    build:
      context: ""
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - .:/app/app
      - ./manage.py:/app/manage.py
    env_file: .env
    depends_on:
      - db
    networks:
      - backend-network
    command: /entrypoint.sh

  db:
    image: postgres:15
    env_file: .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${DB_HOST}
      POSTGRES_PORT: ${DB_PORT}

    volumes:
      - db:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $POSTGRES_DB -U $POSTGRES_USER"]
      interval: 5s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
    networks:
      - backend-network

  pgadmin:
    image: dpage/pgadmin4
    depends_on:
      - db
    ports:
      - "5555:80"
    volumes:
      - pgadmin:/var/lib/pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: admin
    restart: unless-stopped
    networks:
      - backend-network


networks:
  backend-network:
    external: false
    attachable: true
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1450

volumes:
  db:
  pgadmin: